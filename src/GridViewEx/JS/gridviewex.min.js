/*!
 * GridViewEX v1.4.0 (https://github.com/vcliment89/GridViewEX)
 * Copyright 2013-2014 Vicent Climent
 * Licensed under MIT (https://github.com/vcliment89/GridViewEX/blob/master/LICENSE)
 */

function GVEXColumnCheckboxesDisable(e, t) { $("." + e).each(function (e) { if (t == "checked" && $(this).is(":checked")) $(this).attr("disabled", "disabled"); else if (t == "unchecked" && $(this).is(":not(:checked)") && !$(this)[0].indeterminate) $(this).attr("disabled", "disabled"); else if (t == "null" && $(this)[0].indeterminate) $(this).attr("disabled", "disabled"); else if (t == "checkedOrNull" && ($(this).is(":checked") || $(this)[0].indeterminate)) $(this).attr("disabled", "disabled"); else if (t == "all") $(this).attr("disabled", "disabled") }) } function GVEXCheckboxIndeterminate(e) { var t = document.getElementById(e); if (t != null) t.indeterminate = true } function GVEXColumnSelectionShowAll(e, t, n, r, i) { var s = JSON.parse($(r).val()); $(t).parent().children("ol").children().each(function () { $(this).children("input:checkbox").prop("checked", n) }); $.map(s, function (e, t) { e.V = Number(n) }); $(r).val(JSON.stringify(s)); document.cookie = e + "_ColumnsSelected=" + escape(JSON.stringify(s)) + "; "; $(i).show() } function GVEXColumnSelectionChanged(e, t, n, r) { var i = JSON.parse($(n).val()); $.map(i, function (e, n) { if (e.ID == $(t).attr("data-field")) { e.V = Number($(t).is(":checked")) } }); $(n).val(JSON.stringify(i)); document.cookie = e + "_ColumnsSelected=" + escape(JSON.stringify(i)) + "; "; $(r).show() } function GVEXColumnIndexChanged(e, t, n, r, i) { var s = JSON.parse($(r).val()); var o = $(t).parent(); var u = o.prev(); var a = o.next(); var f = o.children(); var l = parseInt(f.closest("input:checkbox").attr("data-index")); s.move(l, n); $.map(s, function (e, t) { e.I = t }); if (n == 0) { o.insertBefore(u); u.children().closest("input:checkbox").attr("data-index", n + 1); f.closest('[data-action=""up""]').css("visibility", "hidden"); u.children().closest('[data-action=""up""], [data-action=""down""]').css("visibility", "visible") } else if (n == 1 && n > l) { o.insertAfter(a); a.children().closest("input:checkbox").attr("data-index", n - 1); a.children().closest('[data-action=""up""]').css("visibility", "hidden"); f.closest('[data-action=""up""], [data-action=""down""]').css("visibility", "visible") } else if (n == o.parent().children().length - 2 && l > n) { o.insertBefore(u); u.children().closest("input:checkbox").attr("data-index", n + 1); u.children().closest('[data-action=""down""]').css("visibility", "hidden"); f.closest('[data-action=""up""], [data-action=""down""]').css("visibility", "visible") } else if (n == o.parent().children().length - 1) { o.insertAfter(a); a.children().closest("input:checkbox").attr("data-index", n - 1); f.closest('[data-action=""down""]').css("visibility", "hidden"); a.children().closest('[data-action=""up""], [data-action=""down""]').css("visibility", "visible") } else { if (l < n) { o.insertAfter(a); a.children().closest("input:checkbox").attr("data-index", n - 1) } else { o.insertBefore(u); u.children().closest("input:checkbox").attr("data-index", n + 1) } } f.closest("input:checkbox").attr("data-index", n); $(r).val(JSON.stringify(s)); document.cookie = e + "_ColumnsSelected=" + escape(JSON.stringify(s)) + "; "; $(i).show() } function GVEXPopover(e, t) { $(e).popover({ html: true, trigger: "click", placement: "bottom", content: function () { return $(t).html() } }) } function GVEXSaveSearchExp(e, t, n) { $("#" + e).val(n); $("#" + t).focus() } function GVEXDeleteAlert(e) { var t = new Date; document.cookie = e + "_AlertMessage=; expires=" + t.toUTCString() + "; path=" } function GVEXCreateTopScrollbar(e) { var t = $("#" + e + "GridViewTable"); var n = $("<div></div>").attr("id", e + "Scrollbar").css("overflow-x", "auto").css("overflow-y", "hidden").append($("<div></div>").width(t.children("div").children("table")[0].scrollWidth).css("padding-top", "1px").append(" ")); n.scroll(function () { t.scrollLeft(n.scrollLeft()) }); t.scroll(function () { n.scrollLeft(t.scrollLeft()) }); t.before(n) } function GVEXToggleInlineFilter(e, t, n) { if (typeof n != "undefined") { window[e + "IsFilterShown"] = n; if (n) { $("." + e + "Filters").show(); $(t).addClass("active") } else { $("." + e + "Filters").hide(); $(t).removeClass("active") } } else { window[e + "IsFilterShown"] = !window[e + "IsFilterShown"]; $("." + e + "Filters").toggle(); if (window[e + "IsFilterShown"]) $(t).addClass("active"); else $(t).removeClass("active") } $("#" + e + "Scrollbar").children("div").width($("#" + e + "GridViewTable").children("div").children("table")[0].scrollWidth) } function GVEXCompactTable(e, t, n, r) { window[e + "SizeCompact"] = t; if (t) { $("#" + e).addClass("table-condensed"); $("#" + n).show(); $("#" + r).hide() } else { $("#" + e).removeClass("table-condensed"); $("#" + n).hide(); $("#" + r).show() } $("#" + e + "Scrollbar").children("div").width($("#" + e + "GridViewTable").children("div").children("table")[0].scrollWidth) } function GVEXSaveView(e, t, n, r, i) { var s = true; var o = $(r).find("input[type='checkbox']"); var u = typeof $().emulateTransitionEnd == "function"; var a = u ? "alert-danger" : "alert-error"; s = $(n).val().length > 0; var f = 0; $.map(o, function (e, t) { if ($(e).is(":checked")) f++ }); if (o.length >= 1 && f <= 0) s = false; if (s) { var l = new Date; var c = new Date(l.getTime() + 5 * 6e4); document.cookie = e + "_AlertMessage=" + escape("View Saved!") + "; expires=" + c.toUTCString() + "; path="; $(t).modal("hide"); return true } else { if ($(n).val().length <= 0) { if ($(i).length <= 0) $(n).parent().parent().next().children("div:first-child").append("<div id='" + i.substring(1, i.length) + "' class='alert " + a + " fade in' style='font-size: 14px;line-height: 20px;'><button class='close' data-dismiss='alert'>x</button><div>Must provide a name</div></div>"); else { $(i).children("div").html("Must provide a name"); $(i).show() } $(n).css("border-color", "#B94A48").css("color", "#B94A48").focus() } else if (o.length >= 1 && f <= 0) { if ($(i).length <= 0) $(n).parent().parent().next().children("div:first-child").append("<div id='" + i.substring(1, i.length) + "' class='alert " + a + " fade in' style='font-size: 14px;line-height: 20px;'><button class='close' data-dismiss='alert'>x</button><div>Must select at least one option</div></div>"); else { $(i).children("div").html("Must select at least one option"); $(i).show() } $.map(o, function (e, t) { $(e).parent().css("color", "#B94A48") }) } return false } }